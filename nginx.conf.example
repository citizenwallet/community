server {
    listen 80;
    listen [::]:80;

    server_name <host_name>;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://<host_name>$request_uri;
    }
}

server {
    listen 443 default_server ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name <host_name>;

    ssl_certificate /etc/nginx/ssl/live/<host_name>/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/<host_name>/privkey.pem;

    location / {
        root /var/www/html;
        if (!-f /var/www/config/community.json) {
            rewrite ^ /dashboard/config redirect;
        }
    }

    location /uploads/ {
        alias /var/www/uploads/;
        expires 5m;
        add_header Cache-Control "public";
    }

    location = /config/community.json {
        alias /var/www/config/community.json;
    }

    resolver 127.0.0.11 valid=30s;

    location = /indexer {
        set $upstream http://cw-indexer:3001;
        proxy_pass $upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location ^~ /indexer/ {
        set $upstream http://cw-indexer:3001;
        rewrite ^/indexer/(.*) /$1 break;
        proxy_pass $upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location = /dashboard {
        set $upstream http://<docker_host_ip>:3000/dashboard;
        proxy_pass $upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location ^~ /dashboard/ {
        set $upstream http://<docker_host_ip>:3000;
        proxy_pass $upstream$request_uri;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}